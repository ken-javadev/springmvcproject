/*
 * Created on 10 Jul 2017 ( Time 09:58:23 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.gvpt.admintool.bean.jpa;

import javax.persistence.*;
import java.io.Serializable;
import java.util.Date;
import java.util.List;

@Entity
@Table(name="GVPT_USER")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="UserAdminEntity.countAll", query="SELECT COUNT(x) FROM UserAdminEntity x" )
} )
public class UserAdminEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="USER_ID", nullable=false)
    private String       userId       ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="NAME", nullable=false, length=100)
    private String     name    ;

    @Column(name="EMAIL", nullable=true, length=500)
    private String     email        ;

    @Column(name="PASSWORD", nullable=false, length=100)
    private String     password     ;

    @Column(name="CONTACT_NUMBER", nullable=true, length=100)
    private String     contactNumber ;

    @Column(name="STATUS", nullable=false)
    private Long       status       ;

    @Column(name="CREATED_BY", nullable=false)
    private String       createdBy    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", nullable=false)
    private Date       createdDate  ;

    @Column(name="MODIFIED_BY")
    private String       modifiedBy   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="MODIFIED_DATE")
    private Date       modifiedDate ;

	// "accessRoleId" (column "ACCESS_ROLE_ID") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
//    @OneToMany(mappedBy="userAdmin", targetEntity=UserNotificationEntity.class, fetch=FetchType.LAZY)
//    private List<UserNotificationEntity> listOfGvptUserNotification;

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ACCESS_ROLE_ID", referencedColumnName="ACCESS_ROLE_ID")
    private AccessRoleEntity accessRole  ;

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public UserAdminEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setUserId( String userId ) {
        this.userId = userId ;
    }
    public String getUserId() {
        return this.userId;
    }

    //--- DATABASE MAPPING : EMAIL ( VARCHAR2 ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getEmail() {
        return this.email;
    }

    //--- DATABASE MAPPING : PASSWORD ( VARCHAR2 ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    public String getPassword() {
        return this.password;
    }

    //--- DATABASE MAPPING : CONTACT_NUMBER ( VARCHAR2 ) 
    public void setContactNumber( String contactNumber ) {
        this.contactNumber = contactNumber;
    }
    public String getContactNumber() {
        return this.contactNumber;
    }

    //--- DATABASE MAPPING : STATUS ( NUMBER ) 
    public void setStatus( Long status ) {
        this.status = status;
    }
    public Long getStatus() {
        return this.status;
    }

    //--- DATABASE MAPPING : CREATED_BY ( NUMBER ) 
    public void setCreatedBy( String createdBy ) {
        this.createdBy = createdBy;
    }
    public String getCreatedBy() {
        return this.createdBy;
    }

    //--- DATABASE MAPPING : CREATED_DATE ( DATE ) 
    public void setCreatedDate( Date createdDate ) {
        this.createdDate = createdDate;
    }
    public Date getCreatedDate() {
        return this.createdDate;
    }

    //--- DATABASE MAPPING : MODIFIED_BY ( NUMBER ) 
    public void setModifiedBy( String modifiedBy ) {
        this.modifiedBy = modifiedBy;
    }
    public String getModifiedBy() {
        return this.modifiedBy;
    }

    //--- DATABASE MAPPING : MODIFIED_DATE ( DATE ) 
    public void setModifiedDate( Date modifiedDate ) {
        this.modifiedDate = modifiedDate;
    }
    public Date getModifiedDate() {
        return this.modifiedDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
//    public void setListOfGvptUserNotification( List<UserNotificationEntity> listOfGvptUserNotification ) {
//        this.listOfGvptUserNotification = listOfGvptUserNotification;
//    }
//    public List<UserNotificationEntity> getListOfGvptUserNotification() {
//        return this.listOfGvptUserNotification;
//    }

    public void setAccessRole( AccessRoleEntity accessRole ) {
        this.accessRole = accessRole;
    }
    public AccessRoleEntity getAccessRole() {
        return this.accessRole;
    }

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(userId);
        sb.append("]:"); 
        sb.append(name);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(password);
        sb.append("|");
        sb.append(contactNumber);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(createdBy);
        sb.append("|");
        sb.append(createdDate);
        sb.append("|");
        sb.append(modifiedBy);
        sb.append("|");
        sb.append(modifiedDate);
        return sb.toString(); 
    } 

}
