/*
 * Created on 20 Jun 2017 ( Time 11:34:48 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package com.gvpt.admintool.web.controller.login;



import com.gvpt.admintool.bean.UserAdmin;
import com.gvpt.admintool.bean.auth.ForgetPassword;
import com.gvpt.admintool.business.service.UserAdminService;
import com.gvpt.admintool.web.common.enumerations.AppConstants;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.mail.internet.MimeMessage;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.apache.velocity.app.VelocityEngine;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.mail.javamail.MimeMessagePreparator;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.ui.velocity.VelocityEngineUtils;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

/**
 * Keys constants.
 * 
 * @author Telosys Tools Generator by cxrus
 *
 */
@Controller
@RequestMapping("/forgot")
public class ForgetPasswordController {

	@Autowired
	private ServletContext servletContext;
	
	@Autowired
	private JavaMailSender mailSender;
	
	@Autowired
	private VelocityEngine velocityEngine;
	
	@Autowired
	private UserAdminService userService;
	
	
	@Value("${mail.sender.email.address}")
	private String mail_from;
	
	@Value("${mail.subject.email.reset.pwd}")
	private String reset_email_subject;

	private static Logger log = LoggerFactory
			.getLogger(ForgetPasswordController.class);

	@RequestMapping(method = RequestMethod.GET)
	public String forgotPwd(ModelMap model) {
		log.info(">>>>>>>>>>>FORGET PASSWORD<<<<<<<<<<<<<<");
		
		model.addAttribute("forgetPassword", new ForgetPassword());

		return "login/forgot-password";
	}

	@RequestMapping(value = "/submit", method = RequestMethod.POST)
	public String forgotPwdSubmit(@Valid ForgetPassword forgetPassword,
			BindingResult bindingResult, ModelMap model,
			HttpServletRequest request) {
		
		log.info(">>>>>>>>>>>SUBMIT FORGET PASSWORD<<<<<<<<<<<<<<");
		
		if (bindingResult.hasErrors()) {
			log.info(">>> " + bindingResult.getFieldError());

			return "forgot-password";
		}

		try {
			final UserAdmin user;
			
			user = userService.getUserByEmail(forgetPassword.getEmail());
			
			if (null == user){
				throw new NullPointerException();
			}
				
			SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy hh:mm");
			String today = sdf.format(new Date());

			Map<String, Object> context = new HashMap<String, Object>();
			context.put("today", today);
			context.put("userEmail", user.getEmail());
			context.put("userPass", user.getPassword());
			String[] parts = user.getName().split("-");
			String part1 = parts[0]; // 004
			String part2 = parts[1]; 
			context.put("userFirstNm", part1);
			context.put("userLastNm", part2);
			context.put("scheme", request.getScheme());
			context.put("domain", request.getHeader("Host"));
			context.put("contextPath", servletContext.getContextPath());

			final String content = VelocityEngineUtils.mergeTemplateIntoString(
					velocityEngine, AppConstants.FORGET_PASSWORD_EMAIL_TEMPLATE,
					context);

			MimeMessagePreparator messagePreparator = new MimeMessagePreparator() {

				@Override
				public void prepare(MimeMessage mimeMessage) throws Exception {
					// TODO Auto-generated method stub
					MimeMessageHelper messageHelper = new MimeMessageHelper(
							mimeMessage, true);
					messageHelper.setTo(user.getEmail());
					messageHelper.setSubject(reset_email_subject);
					messageHelper.setText(content, true);
					messageHelper.setFrom(mail_from);

				}
			};

			mailSender.send(messagePreparator);

			model.addAttribute("success", true);
			model.addAttribute(
					"message",
					"Email notification has been sent to your account, please follow instruction to reset your password!");

			log.info(">>>>forgot password email successfully send!");

		} catch (NullPointerException e) {
			log.error(">>>>>>>>>>>>>>>>>> ForgetPasswordController : NullPointerException <<<<<<<<<<<<<<<<<");
			log.error(e.getMessage(), e);
			model.addAttribute("error", true);
			model.addAttribute("message", "Fail Reset Password");
			
			return "login/forgot-password";
		} catch (Exception e) {
			log.error(">>>>>>>>>>>>>>>>>> ForgetPasswordController : Exception <<<<<<<<<<<<<<<<<");
			log.error(e.getMessage(), e);
			model.addAttribute("error", true);
			model.addAttribute("message", "Fail Reset Password");
			
			return "login/forgot-password";
		}

		return "redirect:/";
	}
}
