/*
 * Created on 20 Jun 2017 ( Time 11:34:48 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package com.gvpt.admintool.web.controller.login;


import com.gvpt.admintool.bean.AccessRole;
import com.gvpt.admintool.bean.UserAdmin;
import com.gvpt.admintool.business.service.AccessRoleService;
import com.gvpt.admintool.business.service.UserAdminService;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

/**
 * This class is used to handle navigation link and redirect it to the correct jsp
 *
 * @author zuniawan.andiprastia
 *
 */

@Controller
public class LinkNavigationController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_LIST_NAME   = "list";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_ROLE_LIST   = "admin/role/list";
	
	@Autowired
	private UserAdminService userService;
	@Resource
    private AccessRoleService roleService;

	
	@RequestMapping(value="/index", method=RequestMethod.GET)
	public ModelAndView indexPage() {
		return new ModelAndView("index");
	}
	
	@RequestMapping(value="/sec/user", method=RequestMethod.GET)
	public ModelAndView userPage(
			ModelMap model) {
		
		Authentication auth = SecurityContextHolder.getContext().getAuthentication();
	    String name = auth.getName(); //get logged in username
	 
		UserAdmin user = userService.getUserByEmail(name);
		
		model.addAttribute("roles", user.getAccessRole());
		model.addAttribute("cxUser", user);
		return new ModelAndView("login/user");
	}
	
	@RequestMapping(value="/admin/role", method=RequestMethod.GET)
	public String roleAdministratorPage(Model model) throws Exception {
		List<AccessRole> list = roleService.findAll();
		model.addAttribute(MAIN_LIST_NAME, list);
		return JSP_ROLE_LIST;
	}
	
	 @RequestMapping(value = "/accessDenied")
     public String accessDenied(ModelMap model) {
		 
		 	model.addAttribute("message",
				"You don't have permission to access this page! Please contact administrator if you supposedly have the permission.");

           return "login/403"; // logical view name
      }

}
