/*
 * Created on 20 Jun 2017 ( Time 11:34:48 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package com.gvpt.admintool.web.controller.login;

import com.gvpt.admintool.bean.auth.ChangePassword;
import com.gvpt.admintool.bean.auth.SessionModel;
import com.gvpt.admintool.business.service.LoginService;

import javax.annotation.Resource;
import javax.validation.Valid;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.session.SessionRegistryImpl;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;



/**
 * Keys constants.
 * 
 * @author Telosys Tools Generator by cxrus
 *
 */
@Controller
public class SecurityLoginController {
	private static Logger log= Logger.getLogger(SecurityLoginController.class);
	
	@Autowired private LoginService loginService;

	
	
	@Resource(name="sessionRegistry")
	private SessionRegistryImpl sessionRegistry;
	
	/*
	 * This method is used to redirect call from path /user-login.html into login-form.jsp
	 */
	@RequestMapping(value="/user-login", method=RequestMethod.GET)
	public ModelAndView loginForm() {
		return new ModelAndView("login/login-form");
	}
	
	/*
	 * This method is used to handle error login. This path is actually comes from spring security login exception
	 */
	@RequestMapping(value="/error-login", method=RequestMethod.GET)
	public ModelAndView invalidLogin() {
		ModelAndView modelAndView = new ModelAndView("login/login-form");
		modelAndView.addObject("error", true);
		return modelAndView;
	}
	
	/*
	 * This method is used to redirect successfully login path (/success-login) into success-login.jsp screen
	 */
	@RequestMapping(value="/success-login", method=RequestMethod.GET)
	public ModelAndView successLogin() {
		return new ModelAndView("index");
	}
	
	/*
	 * This method is used to handle change password command from URI 
	 */
	@RequestMapping(value="/change_pwd/save", method=RequestMethod.POST)
	public String changePwd(@Valid ChangePassword changePassword,
			BindingResult bindingResult,
			ModelMap model){
		
		if(bindingResult.hasErrors()){
			model.addAttribute("menu", "Login");
			model.addAttribute("submenu", "Change Password");
			
			return "login/change_pwd";
		}
		
		SessionModel users= (SessionModel) sessionRegistry.getAllPrincipals().get(0);
		
		if(!loginService.checkPasswordById(users.getEmail(), changePassword.getCurrentPassword())){
			bindingResult.rejectValue("currentPassword", "invalid.password");
			model.addAttribute("menu", "Login");
			model.addAttribute("submenu", "Change Password");
			
			return "login/change_pwd";
		}
		
		if(!changePassword.getNewPassword().equals(changePassword.getRetypeNewPassword())){
			bindingResult.rejectValue("newPassword", "notmatch.password");
			bindingResult.rejectValue("retypeNewPassword", "notmatch.password");
			model.addAttribute("menu", "Login");
			model.addAttribute("submenu", "Change Password");
			
			return "login/change_pwd";
		}
		
		loginService.changePassword(users.getEmail(), changePassword.getNewPassword());
		
		return "redirect:/home";
	}
	
}
