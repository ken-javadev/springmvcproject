/*
 * Created on 20 Jun 2017 ( Time 10:16:12 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.gvpt.admintool.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.gvpt.admintool.bean.AuditTrail;
import com.gvpt.admintool.bean.jpa.AuditTrailEntity;
import com.gvpt.admintool.business.service.AuditTrailService;
import com.gvpt.admintool.business.service.mapping.AuditTrailServiceMapper;
import com.gvpt.admintool.data.repository.jpa.AuditTrailJpaRepository;
import com.gvpt.admintool.data.repository.jpa.AuditTrailSpecRepository;
import com.gvpt.admintool.data.repository.specifications.AuditTrailSpecifications;
import com.gvpt.admintool.web.common.enumerations.UserActivity;

import java.util.Date;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of AuditTrailService
 */
@Component
@Transactional
public class AuditTrailServiceImpl implements AuditTrailService {

	@Resource
	private AuditTrailJpaRepository auditTrailJpaRepository;

	@Resource
	private AuditTrailSpecRepository auditTrailSpecRepository;

	@Resource
	private AuditTrailServiceMapper auditTrailServiceMapper;
	
	
	public AuditTrail findById(Long auditTrailId) {
		AuditTrailEntity auditTrailEntity = auditTrailJpaRepository.findOne(auditTrailId);
		return auditTrailServiceMapper.mapAuditTrailEntityToAuditTrail(auditTrailEntity);
	}
	

	@Override
	public AuditTrail findLastLoginById(String idUser) {
		List<AuditTrailEntity> list=auditTrailJpaRepository.findLastLoginByUserId(idUser);
		return auditTrailServiceMapper.mapAuditTrailEntityToAuditTrail(list.get(0));
	}

	
	public List<AuditTrail> findAll() {
		Iterable<AuditTrailEntity> entities = auditTrailJpaRepository.findAll();
		List<AuditTrail> beans = new ArrayList<AuditTrail>();
		for(AuditTrailEntity auditTrailEntity : entities) {
			beans.add(auditTrailServiceMapper.mapAuditTrailEntityToAuditTrail(auditTrailEntity));
		}
		return beans;
	}

	
	public AuditTrail save(AuditTrail auditTrail) {
		return update(auditTrail) ;
	}

	
	public AuditTrail create(AuditTrail auditTrail) {
		
		AuditTrailEntity auditTrailEntity = null;
		if(auditTrail.getAuditTrailId() != null){
			auditTrailEntity = auditTrailJpaRepository.findOne(auditTrail.getAuditTrailId());
		}
		if( auditTrailEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		auditTrailEntity = new AuditTrailEntity();
		auditTrailServiceMapper.mapAuditTrailToAuditTrailEntity(auditTrail, auditTrailEntity);
		AuditTrailEntity auditTrailEntitySaved = auditTrailJpaRepository.save(auditTrailEntity);
		return auditTrailServiceMapper.mapAuditTrailEntityToAuditTrail(auditTrailEntitySaved);
	}

	
	public AuditTrail update(AuditTrail auditTrail) {
		AuditTrailEntity auditTrailEntity = auditTrailJpaRepository.findOne(auditTrail.getAuditTrailId());
		auditTrailServiceMapper.mapAuditTrailToAuditTrailEntity(auditTrail, auditTrailEntity);
		AuditTrailEntity auditTrailEntitySaved = auditTrailJpaRepository.save(auditTrailEntity);
		return auditTrailServiceMapper.mapAuditTrailEntityToAuditTrail(auditTrailEntitySaved);
	}

	
	public void delete(Long auditTrailId) {
		auditTrailJpaRepository.delete(auditTrailId);
	}

	public AuditTrailJpaRepository getAuditTrailJpaRepository() {
		return auditTrailJpaRepository;
	}

	public void setAuditTrailJpaRepository(AuditTrailJpaRepository auditTrailJpaRepository) {
		this.auditTrailJpaRepository = auditTrailJpaRepository;
	}

	public AuditTrailServiceMapper getAuditTrailServiceMapper() {
		return auditTrailServiceMapper;
	}

	public void setAuditTrailServiceMapper(AuditTrailServiceMapper auditTrailServiceMapper) {
		this.auditTrailServiceMapper = auditTrailServiceMapper;
	}

	public Long countAll() {
		return auditTrailJpaRepository.count();
	}

	public List<AuditTrail> findAll(Pageable pageable) {
		List<AuditTrail> result = new ArrayList<AuditTrail>();
		Page<AuditTrailEntity> entities = auditTrailJpaRepository.findAll(pageable);
		for(AuditTrailEntity auditTrailEntity : entities) {
			result.add(auditTrailServiceMapper.mapAuditTrailEntityToAuditTrail(auditTrailEntity));
		}
		return result;
	}

	public List<AuditTrail> findWithSpec(AuditTrailSpecifications specifications, Pageable pageable){
		List<AuditTrail> result = new ArrayList<AuditTrail>();
		Page<AuditTrailEntity> entities = auditTrailSpecRepository.findAll(specifications, pageable);
		for(AuditTrailEntity auditTrailEntity : entities) {
			result.add(auditTrailServiceMapper.mapAuditTrailEntityToAuditTrail(auditTrailEntity));
		}
		return result;
	}

	public Long countWithSpec(AuditTrailSpecifications specifications){
		return auditTrailSpecRepository.count(specifications);
	}


	@Override
	public AuditTrail saveAudit(String userId, Enum<?> action,
			Date actionDateTime, String references, String ipAddress) {
		AuditTrail audit = new AuditTrail(userId, action.toString(), actionDateTime, references, ipAddress);
		create(audit);
		return audit;
	}


//	public AuditTrail saveAudit(String userId, Enum<?> action, Date actionDateTime,
//			String references, String ipAddress) {
//		AuditTrail audit = new AuditTrail(userId, action.toString(), actionDateTime, references, ipAddress);
//		create(audit);
//		
//	}


}
